const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode');
const express = require('express');
const path = require('path');

const app = express();
app.use(express.json());

// ÿ•ÿπÿØÿßÿØ ÿπŸÖŸäŸÑ WhatsApp ŸÖÿπ LocalAuth ŸÑÿ≠ŸÅÿ∏ ÿßŸÑÿ¨ŸÑÿ≥ÿ©
const client = new Client({
    authStrategy: new LocalAuth(), // Ÿäÿ≠ŸÅÿ∏ ÿßŸÑÿ¨ŸÑÿ≥ÿ© ÿ™ŸÑŸÇÿßÿ¶ŸäŸãÿß
    puppeteer: {
        headless: true,
        executablePath: process.env.CHROMIUM_PATH || '/usr/bin/chromium-browser', // ÿßŸÑÿ™ÿ£ŸÉÿØ ŸÖŸÜ ŸÖÿ≥ÿßÿ± Chromium
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    }
});

// ŸÖÿ™ÿ∫Ÿäÿ± ŸÑÿ™ÿÆÿ≤ŸäŸÜ QR Code
let qrCodeImageUrl = null;

// ÿ™ŸàŸÑŸäÿØ QR Code ÿπŸÜÿØ ÿßŸÑÿ≠ÿßÿ¨ÿ© ŸÅŸÇÿ∑
client.on('qr', async (qr) => {
    console.log("‚úÖ QR Code generated. Generating image...");
    qrCodeImageUrl = await qrcode.toDataURL(qr);
    console.log("‚úÖ Scan this QR Code:", qrCodeImageUrl);
});

// ÿßŸÑÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿ£ŸÜ ÿßŸÑÿπŸÖŸäŸÑ ÿ¨ÿßŸáÿ≤
client.on('ready', () => {
    console.log('‚úÖ WhatsApp Client is ready!');
});

// ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ≠ÿßŸÑÿßÿ™ ÿßŸÑÿßÿ™ÿµÿßŸÑ
client.on('disconnected', (reason) => {
    console.error('‚ö†Ô∏è Client disconnected:', reason);
});

// API ŸÑÿ•ÿ±ÿ≥ÿßŸÑ ÿ±ÿ≥ÿßŸÑÿ©
app.post('/send', async (req, res) => {
    const { phone, message } = req.body;

    if (!phone || !message) {
        return res.status(400).json({ success: false, error: "ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ ŸàÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖÿ∑ŸÑŸàÿ®ÿßŸÜ!" });
    }

    try {
        await client.sendMessage(`${phone}@c.us`, message);
        res.json({ success: true, message: "‚úÖ ÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ©!" });
    } catch (error) {
        res.status(500).json({ success: false, error: error.message });
    }
});

// API ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ QR Code
app.get('/qrcode', (req, res) => {
    if (!qrCodeImageUrl) {
        return res.status(404).json({ success: false, error: "QR Code not generated yet." });
    }
    res.send(`<img src="${qrCodeImageUrl}" alt="QR Code" />`);
});

// ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ≥Ÿäÿ±ŸÅÿ±
const PORT = process.env.PORT || 8080;
app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ Server is running on port ${PORT}`);
});

// ÿ™ŸáŸäÿ¶ÿ© ÿßŸÑÿπŸÖŸäŸÑ
client.initialize().catch(err => {
    console.error('‚ùå Failed to initialize WhatsApp client:', err);
});
